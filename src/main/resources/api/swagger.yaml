swagger: '2.0'
info:
  title: Transaction Logger API
  version: "0.0.1"

schemes: [https]

basePath: /

definitions:
  transaction:
    type: object
    description: |
      A transaction object represents a monetary transaction,
      which involves a specified amount being transferred at a
      specific point in time.
    properties:
      amount:
        type: number
        format: double
        description: |
          The transaction amount in decimal format.
      timestamp:
        type: number
        format: long
        description: |
          The timestamp of the transaction, in UNIX epoch millis format at UTC time.
    required: 
      - amount
      - timestamp
  statistics:
    type: object
    description: |
      A statistical summary object that contains statistics of transactions handled within the last 60 seconds.
    properties:
      min:
        type: number
        format: double
        description: |
          Of the transactions logged within the last 60 seconds, this is the amount of the transaction with the lowest amount.
      max:
        type: number
        format: double
        description: |
          Of the transactions logged within the last 60 seconds, this is the amount of the transaction with the highest amount.
      sum:
        type: number
        format: double
        description: | 
          The sum of all transaction amounts of the last 60 seconds.
      avg:
        type: number
        format: double
        description: | 
          The average of all transaction amounts of the last 60 seconds.
      count:
        type: number
        format: long
        description: | 
          The number of transactions that occured within the last 60 seconds.
  Error:
    description: |
      a standardized problem description, fitting the definition
      of application/problem+json in
      https://tools.ietf.org/html/draft-nottingham-http-problem-07.
    type: object
    properties:
      type:
        type: string
        format: uri
        example: 'http://httpstatus.es/503'
      status:
        type: integer
        format: int32
        example: 503
      title:
        type: string
        example: 'Service Unavailable'
      detail:
        type: string
        example: 'Connection to database timed out'
      instance:
        type: string
        format: uri
    required:
     - type

responses:
  internal_error:
    description: Internal server error.
    schema:
      $ref: "#/definitions/Error"
  temporary_error:
    description: Service unavailable (temporarily).
    schema:
      $ref: "#/definitions/Error"

paths:
  /transactions:
    post:
      parameters: 
          - name: transaction
            description: The definition of the transaction
            in: body
            required: true
            schema:
              $ref: '#/definitions/transaction'
      responses:
        201:
          description: |
            Transaction was successfully created.
        204:
          description: |
            Transaction was accepted even though it was older than 60 seconds.
  /statistics:
    get:
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/statistics'
    